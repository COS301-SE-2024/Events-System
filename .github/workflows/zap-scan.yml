name: OWASP ZAP Scan

on:
  push:
    branches:
      - main
      - develop
      - "**"
  pull_request:
    branches:
      - main
      - develop
      - "**"

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Start the web application (assumes a Node.js application; modify as needed)
      - name: Start Web Application
        shell: bash
        run: |
          npm install
          npm start &
        continue-on-error: true  # Continue even if there's an issue

      # Wait for the application to fully start
      - name: Wait for Web Application to start
        run: sleep 10  # Adjust the time based on how long your app takes to start

      # Run OWASP ZAP Baseline Scan with a custom command
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run -v ${{ github.workspace }}:/zap/wrk/:rw --network=host -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t 'https://Events-system.org' -J report_json.json -w report_md.md -r report_html.html -config api.addrs.addr.name='https://Events-system.org' -config api.addrs.addr.regex=false -m WARN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Stop the web application after the scan (use the appropriate command for your application)
      - name: Stop Web Application
        run: |
          pkill -f 'npm'  # Adjust the command to stop the app (based on how you started it)

      # Optionally, upload ZAP HTML report as an artifact
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html
